using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Shapes;

namespace StoreCMS
{
    /// <summary>
    /// Interaction logic for Start.xaml
    /// </summary>
    public partial class Start : Window
    {
        public Start()
        {
            InitializeComponent();
            Closing += Closing_Window;
        }
        private void Closing_Window (object sender, System.ComponentModel.CancelEventArgs e)
        {
            MessageBoxResult result = MessageBox.Show("Bạn có chắc chắn muốn thoát không?", "Thoát", MessageBoxButton.YesNo, MessageBoxImage.Question);
            if(result == MessageBoxResult.Yes)
            {
                Environment.Exit(0);
            }
        }
        private void View_Products(object sender, RoutedEventArgs e)
        {
            DataProvider.openConnect();
            string queryString = "select * from products";

            DataTable dataTable = DataProvider.getData(queryString);
            DGV.ItemsSource = dataTable.DefaultView;
            DataProvider.closeConnect();
        }
        private void Reload_View_Product()
        {
            DataProvider.openConnect();
            string queryString = "select * from products";
            DataTable dataTable = DataProvider.getData(queryString);
            DGV.ItemsSource = dataTable.DefaultView;
            DataProvider.closeConnect();
        }
        //Tinh chỉnh độ rộng của các trường trong datagrid
        private void DGV_AutoGeneratedColumns(object sender, DataGridAutoGeneratingColumnEventArgs e)
        {
            if (e.PropertyName == "product_description")
            {
                e.Column.Width = new DataGridLength(150);
            }
            else if (e.PropertyName == "product_name")
            {
                e.Column.Width = new DataGridLength(150);
            }
        }

        private void Delete_Product(object sender, RoutedEventArgs e)
        {
            MessageBoxResult result = MessageBox.Show("Bạn có chắc chắn muốn xóa sản phẩm này không?", "Xóa sản phẩm", MessageBoxButton.YesNo, MessageBoxImage.Question);
            if (result == MessageBoxResult.Yes)
            {
                DataProvider.openConnect();
                DataRowView row = (DataRowView)DGV.SelectedItem;
                string product_id = row["product_id"].ToString();
                string query_product = $"delete from products where product_id = '{product_id}'";
                string query_details = $"delete from product_details where product_id = '{product_id}'";
                string query_images = $"delete from product_images where product_id = '{product_id}'";
                DataProvider.executeNonQuery(query_images);
                DataProvider.executeNonQuery(query_details);
                DataProvider.executeNonQuery(query_product);
                MessageBox.Show("Xóa sản phẩm thành công", "Xóa sản phẩm", MessageBoxButton.OK, MessageBoxImage.Information);
                Reload_View_Product();
                DataProvider.closeConnect();
            }
        }

        private void View_Orders(object sender, RoutedEventArgs e)
        {
            DataTable dataTable = DataProvider.getData("select * from orders");
            DGV.ItemsSource = dataTable.DefaultView;
        }

        private void Opend_Form_Add_Product(object sender, RoutedEventArgs e)
        {
            Add_Product form_Add_Product = new Add_Product();
            form_Add_Product.ShowDialog();

        }

        private void Edit_Product(object sender, RoutedEventArgs e)
        {
            DataRowView row = (DataRowView)DGV.SelectedItem;
            if(row != null)
            {
                Add_Product form_Edit_Product = new Add_Product(row);
                form_Edit_Product.ShowDialog();
            } else
            {
                MessageBox.Show("Vui lòng chọn sản phẩm!", "Thông báo", MessageBoxButton.OK, MessageBoxImage.Warning);
            }
        }
        private void Find_Product(object sender, RoutedEventArgs e)
        {
            Find_Product find = new Find_Product();
            find.ShowDialog();
        }
    }
}
